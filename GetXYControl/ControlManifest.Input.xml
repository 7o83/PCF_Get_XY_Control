<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <control namespace="CustomControl" constructor="GetXYControl" version="1.0.10"
    display-name-key="GetXYControl" description-key="GetXYControl description"
    control-type="standard">
    <!--external-service-usage
    node declares whether this 3rd party PCF control is using external service or not, if yes, this
    control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain
    below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT
      TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!--ADDstart-->
    <type-group name="numbers">
      <type>Whole.None</type>
      <type>Currency</type>
      <type>FP</type>
      <type>Decimal</type>
    </type-group>
    <!--ADDend-->
    <!-- property node identifies a specific, configurable piece of data that the control expects
    from CDS -->
    <!--DEL
    <property name="sampleProperty" display-name-key="Property_Display_Key"
      description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />
    -->
    <!--ADDstart-->
    <property name="offsetX" display-name-key="offsetX Value"
      description-key="offsetX Value" of-type-group="numbers" usage="bound"
      required="true" />
    <property name="offsetY" display-name-key="offsetY Value"
      description-key="offsetY Value" of-type-group="numbers" usage="bound"
      required="true" />
    <property name="display" display-name-key="display Value (Transparent or not)"
      description-key="display Value (Transparent or not)" of-type="TwoOptions" usage="bound"
      required="true" />
    <property name="mode" display-name-key="mode Value (click or drag)"
      description-key="mode Value (click or drag)" of-type="Enum" usage="bound"
      required="true">
      <value name="click" display-name-key="click">0</value>
      <value name="drag" display-name-key="drag">1</value>
    </property>
    <property name="dragging" display-name-key="dragging Value (only in drag mode)"
      description-key="dragging Value (only in drag mode)" of-type="TwoOptions" usage="bound"
      required="true" />
    <property name="updateInterval" display-name-key="updateInterval Value. 101 or higher (only in drag mode)"
      description-key="updateInterval Value. 101 or higher (only in drag mode)" of-type-group="numbers" usage="bound"
      required="true" />
    <!--ADDend-->
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key"
    description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1" />
      <!--ADDstart-->
      <css path="css/GetXYControl.css"
        order="1" />
      <!--ADDend-->
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/GetXYControl.css" order="1" />
      <resx path="strings/GetXYControl.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>